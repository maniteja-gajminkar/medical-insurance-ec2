name: EC2 Access Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  ssm-ec2-check:
    runs-on: ubuntu-latest
    env:
      INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
      REGION: ${{ secrets.AWS_REGION }}
      ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME }}

    steps:
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE }}
          aws-region: ${{ env.REGION }}

      - name: Run SSM command to list /home/ec2-user
        run: |
          echo "Sending SSM command to EC2 instance: $INSTANCE_ID"

          CMD_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "$INSTANCE_ID" \
            --region "$REGION" \
            --comment "List contents of /home/ec2-user" \
            --parameters '{"commands":["ls -la /home/ec2-user"]}' \
            --timeout-seconds 60 \
            --query "Command.CommandId" \
            --output text)

          echo "Command ID: $CMD_ID"

          aws ssm wait command-executed \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION"

          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION" \
            --query '{Status:Status, Output:StandardOutputContent, Error:StandardErrorContent}' \
            --output json

      - name: Fresh clone repo on EC2 via SSM
        run: |
          echo "Fresh cloning repo on instance: $INSTANCE_ID"

          CMD_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "$INSTANCE_ID" \
            --region "$REGION" \
            --comment "Fresh clone medical insurance repo" \
            --parameters '{
              "commands": [
                "set -euxo pipefail",
                "echo \"::step:: Installing git...\"",
                "if command -v dnf >/dev/null 2>&1; then sudo dnf install -y git ca-certificates || true; else sudo yum install -y git ca-certificates || true; fi",
                "update-ca-trust || true",
                "echo \"::step:: Cloning repo...\"",
                "rm -rf /home/ec2-user/medical-insurance-ec2",
                "git clone https://github.com/maniteja-gajminkar/medical-insurance-ec2.git /home/ec2-user/medical-insurance-ec2",
                "echo \"::step:: Repo cloned. Listing contents:\"",
                "ls -la /home/ec2-user/medical-insurance-ec2"
              ]
            }' \
            --timeout-seconds 120 \
            --query "Command.CommandId" \
            --output text)

          echo "Command ID: $CMD_ID"

          aws ssm wait command-executed \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION" || echo "Waiter timed out or failed"

          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION" \
            --query '{Status:Status, StdOut:StandardOutputContent, StdErr:StandardErrorContent}' \
            --output json