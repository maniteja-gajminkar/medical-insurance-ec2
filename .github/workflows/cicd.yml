name: EC2 Access Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  ssm-ls-check:
    runs-on: ubuntu-latest
    env:
      INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
      REGION: ${{ secrets.AWS_REGION }}
      ROLE: ${{ secrets.AWS_ROLE_TO_ASSUME }}

    steps:
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE }}
          aws-region: ${{ env.REGION }}

      - name: Run SSM command to list /home/ec2-user
        run: |
          echo "Sending SSM command to EC2 instance: $INSTANCE_ID"

          CMD_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "$INSTANCE_ID" \
            --region "$REGION" \
            --comment "List contents of /home/ec2-user" \
            --parameters "commands=[ 'ls -la /home/ec2-user' ]" \
            --query "Command.CommandId" \
            --output text)

          echo "Command ID: $CMD_ID"

          aws ssm wait command-executed \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION"

          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "$INSTANCE_ID" \
            --region "$REGION" \
            --query '{Status:Status, Output:StandardOutputContent, Error:StandardErrorContent}' \
            --output json

- name: Clone or update repo on EC2 via SSM
  run: |
    echo "Cloning or updating repo on instance: $INSTANCE_ID"

    CMD_ID=$(aws ssm send-command \
      --document-name "AWS-RunShellScript" \
      --instance-ids "$INSTANCE_ID" \
      --region "$REGION" \
      --comment "Deploy medical insurance repo" \
      --parameters '{
        "commands": [
          "set -euxo pipefail",
          "REPO=https://github.com/maniteja-gajminkar/medical-insurance-ec2.git",
          "DIR=/home/ec2-user/medical-insurance-ec2",
          "if [ -d \"$DIR/.git\" ]; then",
          "  cd \"$DIR\" && git pull --ff-only && ls -la",
          "else",
          "  git clone \"$REPO\" \"$DIR\" && ls -la \"$DIR\"",
          "fi"
        ]
      }' \
      --query "Command.CommandId" \
      --output text)

    echo "Command ID: $CMD_ID"

    aws ssm wait command-executed \
      --command-id "$CMD_ID" \
      --instance-id "$INSTANCE_ID" \
      --region "$REGION"

    aws ssm get-command-invocation \
      --command-id "$CMD_ID" \
      --instance-id "$INSTANCE_ID" \
      --region "$REGION" \
      --query '{Status:Status, Output:StandardOutputContent, Error:StandardErrorContent}' \
      --output json